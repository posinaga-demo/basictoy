steps:

#     gcloud builds list --filter="substitutions.COMMIT_SHA=a28f5f64773f6a601d3e82214797bb5c296cc973 AND STATUS=SUCCESS"
#     LISTOUTPUT=$(gcloud builds list --filter="substitutions.COMMIT_SHA=a28f5f64775f6a601d3e82214797bb5c296cc973 AND STATUS=SUCCESS")

# if needed, build and do integration testing
- id: 'build-and-integration-test'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: 
    - '-c'
    - |
      LISTBUILD=$(gcloud builds list --filter="substitutions.COMMIT_SHA=$COMMIT_SHA AND STATUS=SUCCESS")
      echo gcloud builds list command output: $LISTBUILD
      if [[ ! -z "$LISTBUILD" ]]
      then
        echo "A SUCCESSFUL BUILD WAS FOUND - NO NEED TO TO BUILD AND RUN INTEGRATION TESTS"
      else 
        echo "THE BUILD WAS NOT FOUND - NEED TO DO THE BUILD AND RUN INTEGRATION TESTS"
        gcloud builds submit --config cloudbuild-integration.yaml --substitutions="COMMIT_SHA=$COMMIT_SHA"
      fi

#  args: [
#      'builds', 
#      'submit',
#      '--config',
#      'cloudbuild-integration.yaml',
#      '--substitutions',
#      'COMMIT_SHA=$COMMIT_SHA',
#      '.'
#  ]

# new revision for production service
- id: 'new-revision'
  name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'run'
  - 'deploy'
  - 'basictoy'
  - '--image'
  - 'gcr.io/$PROJECT_ID/basictoy:$COMMIT_SHA'
  - '--region'
  - 'us-east4'
  - '--platform'
  - 'managed'

# send traffic to new revision in production service
- id: 'send-traffic'
  name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'run'
  - 'services'
  - 'update-traffic'
  - 'basictoy'
  - '--to-latest'
  - '--region'
  - 'us-east4'
  - '--platform'
  - 'managed'