steps:

# build the webapp container image
# TODO in some cases, this build may already exist - so we could skip
- id: 'build-webapp-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/basictoy:$COMMIT_SHA', '.']
  waitFor: ['-']

# push the webapp container image to Container Registry
# TODO in some cases, this build may already exist - so we could skip
- id: 'push-webapp-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/basictoy:$COMMIT_SHA']
  waitFor: ['build-webapp-image']

# build the integration load-tests container image
# TODO in some cases, this build may already exist - so we could skip
- id: 'build-load-test-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'load-tests/Dockerfile', '-t', 'gcr.io/$PROJECT_ID/basictoy-lt:$COMMIT_SHA', '.']
  waitFor: ['-']

# push the integration load-tests container image to Container Registry
# TODO in some cases, this build may already exist - so we could skip
- id: 'push-load-test-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/basictoy-lt:$COMMIT_SHA']
  waitFor: ['build-load-test-image']

# Deploy webapp to a temp service
- id: 'deploy-temp-webapp-service'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: 
    - '-c'
    - |

      if [ $_CICD_CONTEXT == 'prod' ]
      then
        echo NO WEBAPP TEMP SERVICE WILL BE DEPLOYED FOR prod
        exit 0
      fi

      gcloud run deploy basictoy-$COMMIT_SHA --image gcr.io/$PROJECT_ID/basictoy:$COMMIT_SHA --region us-east4 --platform managed --port 3000 --allow-unauthenticated
      gcloud run services describe basictoy-$COMMIT_SHA --platform managed --region us-east4 | grep Traffic | cut -c10-9999 > _webapp_service_url
      echo DEPLOYED WEBAPP SERVICE - URL: $(cat _webapp_service_url)

  waitFor: ['push-webapp-image']

# run integration load-tests
# TODO: maybe this can be done w/o pulling from gcr (should be in the workspace? or simply passing the locustfile as param)
- id: 'run-load-tests'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: 
    - '-c'
    - |

      if [ $_CICD_CONTEXT == 'prod' ]
      then
        echo NO LOAD TESTS WILL BE RUN FOR prod
        exit 0
      fi

      case $_CICD_CONTEXT:
        branch)
          $$_CLIENTS = 1
          $$_HATCH_RATE = 1
          $$_RUN_TIME = 5s
          ;;
        rc)
          $$_CLIENTS = 1000
          $$_HATCH_RATE = 1
          $$_RUN_TIME = 240s
          ;;
        *)
          echo ERROR - UNKNOWN CICD CONTEXT
          exit 1
          ;;
      esac

      docker run -t gcr.io/$PROJECT_ID/basictoy-lt:$COMMIT_SHA locust --host $(cat _webapp_service_url) --no-web --clients $$_CLIENTS --hatch-rate $$_HATCH_RATE --run-time $$_RUN_TIME

      if [ $_CICD_CONTEXT == 'branch' ]
      then
        echo DELETING TEMP WEBAPP SERVICE - CICD CONTEXT IS branch
        gcloud run services delete basictoy-$COMMIT_SHA --retion us-east4 --platform managed --quite
        exit 0
      fi

  waitFor: ['deploy-temp-webapp-service', 'push-load-test-image']

# promote service to production
- id: 'promote-to-prod'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: 
    - '-c'
    - |

      if [ $_CICD_CONTEXT != 'prod' ]
      then
        echo NOT PROMOTING TO PRODUCTION - ONLY DOING IT WHEN CICD CONTEXT IS prod
        exit 0
      fi

      gcloud run deploy basictoy --image gcr.io/$PROJECT_ID/basictoy:$COMMIT_SHA --region us-east4 --platform managed
      gcloud run services update-traffic basictoy --to-latest --region us-east4 --platform managed

  waitFor: ['deploy-temp-webapp-service']